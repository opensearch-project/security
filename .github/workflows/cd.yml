name: CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.x

    - name: Checkout security
      uses: actions/checkout@v2

    - name: Build
      run: |
        mvn clean package -Padvanced -DskipTests
        artifact_zip=`ls $(pwd)/target/releases/opendistro_security-*.zip | grep -v admin-standalone`
        ./gradlew build buildDeb buildRpm --no-daemon -ParchivePath=$artifact_zip -Dbuild.snapshot=false
        mkdir artifacts
        cp $artifact_zip artifacts/
        cp gradle-build/distributions/*.deb artifacts/
        cp gradle-build/distributions/*.rpm artifacts/
        zip -r artifacts.zip artifacts
        echo ::set-env name=TAG_VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Upload Artifacts to S3
      run: |
        s3_path=s3://artifacts.opendistroforelasticsearch.amazon.com/downloads
        aws s3 cp artifacts/*.zip $s3_path/elasticsearch-plugins/opendistro-security/
        aws s3 cp artifacts/*.deb $s3_path/debs/opendistro-security/
        aws s3 cp artifacts/*.rpm $s3_path/rpms/opendistro-security/
        aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths '/downloads/*'

    - name: Create Github Draft Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.TAG_VERSION }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: artifacts.zip
        asset_path: artifacts.zip
        asset_content_type: application/zip

    - name: Upload Workflow Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/
