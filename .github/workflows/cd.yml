name: CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.x
        server-id: sonatype-nexus-staging
        server-username: SONATYPE_USER
        server-password: SONATYPE_PASSWORD

    - name: Checkout security
      uses: actions/checkout@v2

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build
      run: |
        mvn -B clean package -Padvanced -DskipTests
        artifact_zip=`ls $(pwd)/target/releases/opensearch-security-*.zip | grep -v admin-standalone`
        ./gradlew build buildDeb buildRpm --no-daemon -ParchivePath=$artifact_zip -Dbuild.snapshot=false
        mkdir artifacts
        cp $artifact_zip artifacts/
        cp gradle-build/distributions/*.deb artifacts/
        cp gradle-build/distributions/*.rpm artifacts/
        zip -r artifacts.zip artifacts
        echo "TAG_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Upload Artifacts to S3
      run: |
        zip=`ls artifacts/*.zip`
        rpm=`ls artifacts/*.rpm`
        deb=`ls artifacts/*.deb`

        # Inject the build number before the suffix
        zip_outfile=`basename ${zip%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
        rpm_outfile=`basename ${rpm%.rpm}-build-${GITHUB_RUN_NUMBER}.rpm`
        deb_outfile=`basename ${deb%.deb}-build-${GITHUB_RUN_NUMBER}.deb`

        s3_prefix="s3://staging.artifacts.opendistroforelasticsearch.amazon.com/snapshots/elasticsearch-plugins/security/"

        echo "Copying ${zip} to ${s3_prefix}${zip_outfile}"
        aws s3 cp --quiet $zip ${s3_prefix}${zip_outfile}

        echo "Copying ${rpm} to ${s3_prefix}${rpm_outfile}"
        aws s3 cp --quiet $rpm ${s3_prefix}${rpm_outfile}

        echo "Copying ${deb} to ${s3_prefix}${deb_outfile}"
        aws s3 cp --quiet $deb ${s3_prefix}${deb_outfile}

    - name: Upload Artifacts to Maven Central
      env:
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: |
        gpg --batch --import --no-tty <(echo -e "${{ secrets.PGP_PRIVATE_KEY }}")
        mvn -B deploy -Padvanced -Prelease -DskipTests -Dgpg.passphrase=${{ secrets.PGP_PASSPHRASE }}

    - name: Create Github Draft Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.TAG_VERSION }}
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_name: artifacts.zip
        asset_path: artifacts.zip
        asset_content_type: application/zip

    - name: Upload Workflow Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts/
