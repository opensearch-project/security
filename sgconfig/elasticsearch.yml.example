############## Search Guard 6 configuration ###############

###########################################################
# Add the following settings to your standard elasticsearch.yml 
# alongside with the Search Guard TLS settings.
# Settings must always be the same on all nodes in the cluster.

############## Common configuration settings ##############

# Enable or disable the Search Guard enterprise modules
# By default enterprise modules are enabled. If you use any of the modules in production you need
# to obtain a license. If you want to use the free Community Edition, you can switch
# all enterprise features off by setting the following key to false
searchguard.enterprise_modules_enabled: true

# Specify a list of DNs which denote the other nodes in the cluster.
# This settings support wildcards and regular expressions
# This setting only has effect if 'searchguard.cert.intercluster_request_evaluator_class' is not set.
searchguard.nodes_dn:
  - "CN=*.example.com, OU=SSL, O=Test, L=Test, C=DE"
  - "CN=node.other.com, OU=SSL, O=Test, L=Test, C=DE"

# Defines the DNs (distinguished names) of certificates
# to which admin privileges should be assigned (mandatory)
searchguard.authcz.admin_dn:
  - "CN=kirk,OU=client,O=client,l=tEst, C=De"

# Define how backend roles should be mapped to Search Guard roles
# MAPPING_ONLY - mappings must be configured explicitely in sg_roles_mapping.yml (default)
# BACKENDROLES_ONLY - backend roles are mapped to Search Guard rules directly. Settings in sg_roles_mapping.yml have no effect.
# BOTH - backend roles are mapped to Search Guard roles mapped directly and via sg_roles_mapping.yml in addition
searchguard.roles_mapping_resolution: MAPPING_ONLY

############## REST Management API configuration settings ##############
# Enable or disable role based access to the REST management API
# Default is that no role is allowed to access the REST management API.
#searchguard.restapi.roles_enabled: ["sg_all_access","sg_xyz_role"]

# Disable particular endpoints and their HTTP methods for roles. 
# By default all endpoints/methods are allowed.
#searchguard.restapi.endpoints_disabled.<role>.<endpoint>: <array of http methods>
# Example:
#searchguard.restapi.endpoints_disabled.sg_all_access.ACTIONGROUPS: ["PUT","POST","DELETE"]
#searchguard.restapi.endpoints_disabled.sg_xyz_role.LICENSE: ["DELETE"]

# The following endpoints exist:
# ACTIONGROUPS
# CACHE
# SGCONFIG
# LICENSE
# ROLES
# ROLESMAPPING
# INTERNALUSERS
# SYSTEMINFO
# PERMISSIONSINFO

############## Auditlog configuration settings ##############
# General settings

# Enable/disable rest request logging (default: true)
#searchguard.audit.enable_rest: true
# Enable/disable transport request logging (default: false)
#searchguard.audit.enable_transport: false
# Enable/disable bulk request logging (default: false)
# If enabled all subrequests in bulk requests will be logged too
#searchguard.audit.resolve_bulk_requests: false
# Disable some categories
#searchguard.audit.config.disabled_categories: ["AUTHENTICATED","GRANTED_PRIVILEGES"]
# Disable some requests (wildcard or regex of actions or rest request paths)
#searchguard.audit.ignore_requests: ["indices:data/read/*","*_bulk"]
# Tune threadpool size, default is 10 and 0 means disabled
#searchguard.audit.threadpool.size: 0
# Tune threadpool max size queue length, default is 100000
#searchguard.audit.threadpool.max_queue_len: 100000

# If enable_request_details is true then the audit log event will also contain
# details like the search query. Default is false. 
#searchguard.audit.enable_request_details: true
# Ignore users, e.g. do not log audit requests from that users (default: no ignored users)
#searchguard.audit.ignore_users: ['kibanaserver','some*user','/also.*regex possible/']"

# Destination of the auditlog events
searchguard.audit.type: internal_elasticsearch
#searchguard.audit.type: external_elasticsearch
#searchguard.audit.type: debug
#searchguard.audit.type: webhook

# external_elasticsearch settings
#searchguard.audit.config.http_endpoints: ['localhost:9200','localhost:9201','localhost:9202']"
# Auditlog index can be a static one or one with a date pattern (default is 'auditlog6')
#searchguard.audit.config.index: auditlog6 # make sure you secure this index properly
#searchguard.audit.config.index: "'auditlog6-'YYYY.MM.dd" #rotates index daily - make sure you secure this index properly
#searchguard.audit.config.type: auditlog
#searchguard.audit.config.username: auditloguser
#searchguard.audit.config.password: auditlogpassword
#searchguard.audit.config.enable_ssl: false
#searchguard.audit.config.verify_hostnames: false
#searchguard.audit.config.enable_ssl_client_auth: false
#searchguard.audit.config.cert_alias: mycert
#searchguard.audit.config.pemkey_filepath: key.pem
#searchguard.audit.config.pemkey_content: <...pem base 64 content>
#searchguard.audit.config.pemkey_password: secret
#searchguard.audit.config.pemcert_filepath: cert.pem
#searchguard.audit.config.pemcert_content: <...pem base 64 content>
#searchguard.audit.config.pemtrustedcas_filepath: ca.pem
#searchguard.audit.config.pemtrustedcas_content: <...pem base 64 content>

# webhook settings
#searchguard.audit.config.webhook.url: "http://mywebhook/endpoint"
# One of URL_PARAMETER_GET,URL_PARAMETER_POST,TEXT,JSON,SLACK
#searchguard.audit.config.webhook.format: JSON
#searchguard.audit.config.webhook.ssl.verify: false
#searchguard.audit.config.webhook.ssl.pemtrustedcas_filepath: ca.pem
#searchguard.audit.config.webhook.ssl.pemtrustedcas_content: <...pem base 64 content>

# log4j settings
#searchguard.audit.config.log4j.logger_name: auditlogger
#searchguard.audit.config.log4j.level: INFO

############## Kerberos configuration settings ##############
# If Kerberos authentication should be used you have to configure:

# The Path to the krb5.conf file
# Can be absolute or relative to the Elasticsearch config directory
#searchguard.kerberos.krb5_filepath: '/etc/krb5.conf'
            
# The Path to the keytab where the acceptor_principal credentials are stored.           
# Must be relative to the Elasticsearch config directory
#searchguard.kerberos.acceptor_keytab_filepath: 'eskeytab.tab'

# Acceptor (Server) Principal name, must be present in acceptor_keytab_path file
#searchguard.kerberos.acceptor_principal: 'HTTP/localhost'

############## Advanced configuration settings ##############
# Enable transport layer impersonation
# Allow DNs (distinguished names) to impersonate as other users
#searchguard.authcz.impersonation_dn:
#  "CN=spock,OU=client,O=client,L=Test,C=DE":
#    - worf
#  "cn=webuser,ou=IT,ou=IT,dc=company,dc=com":
#    - user2
#    - user1

# Enable rest layer impersonation
# Allow users to impersonate as other users
#searchguard.authcz.rest_impersonation_user:
#  "picard":
#    - worf
#  "john":
#    - steve
#    - martin

# If this is set to true Search Guard will automatically initialize the configuration index
# with the files in the sgconfig directory if the index does not exist.
# WARNING: This will use well-known default passwords.
#          Use only in a private network/environment.
#searchguard.allow_default_init_sgindex: false

# If this is set to true then allow to startup with demo certificates.
# These are certificates issued by floragunn GmbH for demo purposes.
# WARNING: This certificates are well known and therefore unsafe
#          Use only in a private network/environment.
#searchguard.allow_unsafe_democertificates: false

############## Expert settings ##############
# WARNING: Expert settings, do only use if you know what you are doing
# If you set wrong values here this this could be a security risk
# or make Search Guard stop working

# Name of the index where searchguard stores its configuration.
#searchguard.config_index_name: searchguard

# This defines the OID of server node certificates
# See http://docs.search-guard.com/v6/tls-in-production
#searchguard.cert.oid: '1.2.3.4.5.5'

# This specifies the implementation of com.amazon.opendistrosecurity.transport.InterClusterRequestEvaluator
# that is used to determine inter-cluster request.
# Instances of com.amazon.opendistrosecurity.transport.InterClusterRequestEvaluator must implement a single argument
# constructor that takes an org.elasticsearch.common.settings.Settings
#searchguard.cert.intercluster_request_evaluator_class: com.amazon.opendistrosecurity.transport.DefaultInterClusterRequestEvaluator

# Allow snapshot restore for normal users
# By default only requests signed by an admin TLS certificate can do this
# To enable snapshot restore for normal users set 'searchguard.enable_snapshot_restore_privilege: true'
# The user who wants to restore a snapshot must have the 'cluster:admin/snapshot/restore' privilege and must also have
# "indices:admin/create" and "indices:data/write/index" for the indices to be restores.
# A snapshot can only be restored when it does not contain global state and does not restore the 'searchguard' index
# If 'searchguard.check_snapshot_restore_write_privileges: false' is set then the additional indices checks are omitted.
# This makes it less secure.
#searchguard.enable_snapshot_restore_privilege: true
#searchguard.check_snapshot_restore_write_privileges: false

# Authentication cache timeout in minutes (A value of 0 disables caching, default is 60)
#searchguard.cache.ttl_minutes: 60

# Disable Search Guard
# WARNING: This can expose your configuration (including passwords) to the public.
#searchguard.disabled: false