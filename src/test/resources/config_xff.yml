#
# HTTP
#   basic (challenging) PREAUTH?
#   proxy (not challenging, needs xff)
#   kerberos (challenging)  PREAUTH?
#   clientcert (not challenging, needs https)

# Authc
#   internal
#   noop
#   ldap  

# Authz
#   ldap  
#   noop



opendistro_security:
  dynamic:
    http:
      anonymous_auth_enabled: false
      xff:
        enabled: true
        internalProxies: '.*'
        remoteIpHeader: "x-forwarded-for"
        #proxiesHeader: "x-forwarded-by"
        #trustedProxies: "proxy1|proxy2"
    authc:
      authentication_domain_basic_internal:
        enabled: true
        order: 0
        http_authenticator:
          type: basic
        authentication_backend:
          type: intern
      authentication_domain_clientcert:
        enabled: false
        order: 1
        http_authenticator:
          type: clientcert
        authentication_backend:
          type: noop
      authentication_domain_proxy:
        enabled: false
        order: 2
        http_authenticator:
          type: proxy
          config:
          user_header: "x-proxy-user"
          roles_header: "x-proxy-roles"
        authentication_backend:
          type: noop
      authentication_domain_kerb:
        enabled: false
        order: 3
        http_authenticator:
          type: kerberos
        authentication_backend:
          type: noop
    authz:    
      roles_from_myldap:
        enabled: false
        authorization_backend:
          type: ldap
          config:
            rolesearch: "(uniqueMember={0})"
            resolve_nested_roles: true
            rolebase: "ou=groups,o=TEST"
            rolename: cn
      roles_from_xxx:
        enabled: false
        authorization_backend:
          type: xxx